name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        create_credentials_file: true
        export_environment_variables: true
        cleanup_credentials: true
        access_token_lifetime: 3600s
        access_token_scopes: https://www.googleapis.com/auth/cloud-platform
        retries: 3
        backoff: 250
        id_token_include_email: false

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'gcloud'
        version: 'latest'
        skip_install: false

    - name: Install Artifact Registry Component
      run: |
        gcloud components update --quiet
        gcloud components install artifact-registry --quiet

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

    - name: Check and Create Artifact Registry Repository
      run: |
        REPO_NAME=my-test-weather-app
        if ! gcloud artifacts repositories describe $REPO_NAME --location=${{ secrets.GCP_REGION }} >/dev/null 2>&1; then
          gcloud artifacts repositories create $REPO_NAME --repository-format=docker --location=${{ secrets.GCP_REGION }}
        fi

    - name: Build Docker image
      run: |
        IMAGE_NAME=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-test-weather-app/my-test-weather-app
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy my-test-weather-app \
          --image=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/my-test-weather-app/my-test-weather-app \
          --region=${{ secrets.GCP_REGION }} \
          --platform=managed \
          --allow-unauthenticated